{
  "address": "0x278d431B9bcfB1Fe078F7e18296dA3894e4A563e",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "awardTickets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "boxTierToPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnTickets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dispenseTickets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nookiTokenTicketsAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "tier",
          "type": "uint8"
        }
      ],
      "name": "purchaseBox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "tier",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setBoxTierPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lootAddress",
          "type": "address"
        }
      ],
      "name": "setLootAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nookiAddress",
          "type": "address"
        }
      ],
      "name": "setNookiAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nookiId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "setNookiTicketMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nookiIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "multipliers",
          "type": "uint256[]"
        }
      ],
      "name": "setNookiTicketMultipliers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "blocked",
          "type": "bool"
        }
      ],
      "name": "setTransferBlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf4ad9be8bd5c41a3f78014e2dcfaf2920689c10f80d8116f0decca7954c10e04",
  "receipt": {
    "to": null,
    "from": "0xA50A977C76FB49Fbc3Ba68a4e73CF40053A688FE",
    "contractAddress": "0x278d431B9bcfB1Fe078F7e18296dA3894e4A563e",
    "transactionIndex": 31,
    "gasUsed": "1621527",
    "logsBloom": "0x
    "blockHash": "0x9ce800befe56f83428f63c38ca116f49a1dddf47865e06611a8b9b0a02e7f56d",
    "transactionHash": "0xf4ad9be8bd5c41a3f78014e2dcfaf2920689c10f80d8116f0decca7954c10e04",
    "logs": [
      {
        "transactionIndex": 31,
        "blockNumber": 9536750,
        "transactionHash": "0xf4ad9be8bd5c41a3f78014e2dcfaf2920689c10f80d8116f0decca7954c10e04",
        "address": "0x278d431B9bcfB1Fe078F7e18296dA3894e4A563e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a50a977c76fb49fbc3ba68a4e73cf40053a688fe"
        ],
        "data": "0x",
        "logIndex": 65,
        "blockHash": "0x9ce800befe56f83428f63c38ca116f49a1dddf47865e06611a8b9b0a02e7f56d"
      }
    ],
    "blockNumber": 9536750,
    "cumulativeGasUsed": "20293137",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "2ac7647d518c751c1fdadb1abc276bc9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"awardTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"boxTierToPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dispenseTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nookiTokenTicketsAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"purchaseBox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setBoxTierPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lootAddress\",\"type\":\"address\"}],\"name\":\"setLootAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nookiAddress\",\"type\":\"address\"}],\"name\":\"setNookiAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nookiId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"setNookiTicketMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nookiIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"multipliers\",\"type\":\"uint256[]\"}],\"name\":\"setNookiTicketMultipliers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"setTransferBlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ticketer.sol\":\"NuttyTickets\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/ticketer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract NuttyLootInterface {\\n  function mintBox(address recipient, uint8 tier) external {}\\n}\\n\\ncontract NuttyNookiInterface {\\n  function totalSupply() public view returns (uint256) {}\\n  function tokenByIndex(uint256 index) public view returns (uint256) {}\\n  function ownerOf(uint256 tokenId) external view returns (address owner) {}\\n  function ticketResetDate(uint tokenId) external view returns(uint) {}\\n}\\n\\ncontract NuttyTickets is ERC20, Ownable {\\n  mapping(uint8 => uint) public boxTierToPrice;\\n  mapping(uint => uint) public nookiTokenTicketsAccrued;\\n  NuttyLootInterface private _nuttyLoot;\\n  NuttyNookiInterface private _nuttyNooki;\\n  mapping(uint => uint) private _nookiTokenToTicketMultiplier;\\n  mapping(uint => uint) private _nookiTokenPrevDispenseDay;\\n  bool private _transferBlocked;\\n\\n  constructor() ERC20(\\\"NuttyTickets\\\", \\\"NTX\\\") {\\n    _transferBlocked = true;\\n  }\\n  \\n  function purchaseBox(address recipient, uint8 tier) external {\\n    require(balanceOf(msg.sender) >= boxTierToPrice[tier], \\\"Sender has insufficient funds\\\");\\n\\n    _nuttyLoot.mintBox(recipient, tier);\\n    _burn(msg.sender, boxTierToPrice[tier]);\\n  }\\n\\n  function dispenseTickets() external onlyOwner {\\n    for(uint i = 0; i < _nuttyNooki.totalSupply(); i++) {\\n      uint nookiToken = _nuttyNooki.tokenByIndex(i);\\n      uint daysSinceReset = (block.timestamp - _nuttyNooki.ticketResetDate(nookiToken)) / 86400;\\n      uint daysToDispense = daysSinceReset - _nookiTokenPrevDispenseDay[nookiToken];\\n\\n      if (daysToDispense < 0) {\\n        daysToDispense = daysSinceReset;\\n        nookiTokenTicketsAccrued[nookiToken] = 0;\\n      }\\n\\n      uint ticketsToDispense = daysToDispense * _nookiTokenToTicketMultiplier[nookiToken];\\n      _nookiTokenPrevDispenseDay[nookiToken] = daysSinceReset;\\n\\n      if (ticketsToDispense > 0) {\\n        nookiTokenTicketsAccrued[nookiToken] += ticketsToDispense;\\n        _mint(_nuttyNooki.ownerOf(nookiToken), ticketsToDispense);\\n      }\\n    }\\n  }\\n\\n  function setLootAddress(address lootAddress) external onlyOwner { _nuttyLoot = NuttyLootInterface(lootAddress); }\\n  function setNookiAddress(address nookiAddress) external onlyOwner { _nuttyNooki = NuttyNookiInterface(nookiAddress); }\\n  function setBoxTierPrice(uint8 tier, uint price) external onlyOwner { boxTierToPrice[tier] = price; }\\n  function awardTickets(address recipient, uint amount) external onlyOwner { _mint(recipient, amount); }\\n  function burnTickets(address recipient, uint amount) external onlyOwner { _burn(recipient, amount); }\\n  function setTransferBlocked(bool blocked) external onlyOwner { _transferBlocked = blocked; }\\n  function setNookiTicketMultiplier(uint nookiId, uint multiplier) external onlyOwner { _nookiTokenToTicketMultiplier[nookiId] = multiplier; }\\n  function setNookiTicketMultipliers(uint[] memory nookiIds, uint[] memory multipliers) external onlyOwner {\\n    require(nookiIds.length == multipliers.length, \\\"Ids length does not match multipliers length\\\");\\n    \\n    for(uint i = 0; i < nookiIds.length; i++) {\\n      _nookiTokenToTicketMultiplier[nookiIds[i]] = multipliers[i];\\n    }\\n  }\\n\\n  function _transfer(address sender, address recipient, uint256 amount) internal override(ERC20) {\\n    require(!_transferBlocked, \\\"Users are not allowed to transfer tickets\\\");\\n    super._transfer(sender, recipient, amount);\\n  }\\n}\",\"keccak256\":\"0xcbba31d441e221369eda0eaa7357bdf05bdccf6b258ba056b3f4eaa683cb5749\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020016b4e757474795469636b65747360a01b8152506040518060400160405280600381526020016209ca8b60eb1b81525081600390805190602001906200006b92919062000107565b5080516200008190600490602084019062000107565b5050506200009e62000098620000b160201b60201c565b620000b5565b600c805460ff19166001179055620001ea565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011590620001ad565b90600052602060002090601f01602090048101928262000139576000855562000184565b82601f106200015457805160ff191683800117855562000184565b8280016001018555821562000184579182015b828111156200018457825182559160200191906001019062000167565b506200019292915062000196565b5090565b5b8082111562000192576000815560010162000197565b600281046001821680620001c257607f821691505b60208210811415620001e457634e487b7160e01b600052602260045260246000fd5b50919050565b611a9580620001fa6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063749f82e7116100de578063c489f1db11610097578063e31743d711610071578063e31743d714610334578063e6cbfc8a14610347578063ee204ff21461035a578063f2fde38b1461036d5761018e565b8063c489f1db14610306578063d6f748ff1461030e578063dd62ed3e146103215761018e565b8063749f82e71461029d57806385bc898c146102b05780638da5cb5b146102c357806395d89b41146102d8578063a457c2d7146102e0578063a9059cbb146102f35761018e565b80632b3f944e1161014b5780634306e4c9116101255780634306e4c91461025c57806363ef62ef1461026f57806370a0823114610282578063715018a6146102955761018e565b80632b3f944e14610221578063313ce5671461023457806339509351146102495761018e565b806306fdde0314610193578063095ea7b3146101b157806314c6e60f146101d157806318160ddd146101e657806323b872dd146101fb5780632a9c5a971461020e575b600080fd5b61019b610380565b6040516101a8919061150e565b60405180910390f35b6101c46101bf36600461136d565b610412565b6040516101a89190611503565b6101e46101df3660046114b8565b61042f565b005b6101ee61048d565b6040516101a89190611943565b6101c461020936600461132d565b610493565b6101e461021c3660046112b6565b610523565b6101e461022f366004611398565b610584565b61023c610644565b6040516101a8919061194c565b6101c461025736600461136d565b610649565b6101e461026a3660046112b6565b61069d565b6101e461027d36600461136d565b6106fe565b6101ee6102903660046112b6565b610747565b6101e4610766565b6101ee6102ab36600461149e565b6107b1565b6101e46102be36600461136d565b6107c3565b6102cb61080c565b6040516101a891906114d3565b61019b61081b565b6101c46102ee36600461136d565b61082a565b6101c461030136600461136d565b6108a3565b6101e46108b7565b6101e461031c3660046113cc565b610bba565b6101ee61032f3660046112f5565b610ca4565b6101e461034236600461142d565b610ccf565b6101e461035536600461147d565b610d21565b6101ee61036836600461144d565b610d72565b6101e461037b3660046112b6565b610d84565b60606003805461038f906119c8565b80601f01602080910402602001604051908101604052809291908181526020018280546103bb906119c8565b80156104085780601f106103dd57610100808354040283529160200191610408565b820191906000526020600020905b8154815290600101906020018083116103eb57829003601f168201915b5050505050905090565b600061042661041f610df2565b8484610df6565b50600192915050565b610437610df2565b6001600160a01b031661044861080c565b6001600160a01b0316146104775760405162461bcd60e51b815260040161046e906116fc565b60405180910390fd5b60ff909116600090815260066020526040902055565b60025490565b60006104a0848484610eaa565b6001600160a01b0384166000908152600160205260408120816104c1610df2565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156105045760405162461bcd60e51b815260040161046e906116b4565b61051885610510610df2565b858403610df6565b506001949350505050565b61052b610df2565b6001600160a01b031661053c61080c565b6001600160a01b0316146105625760405162461bcd60e51b815260040161046e906116fc565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60ff81166000908152600660205260409020546105a033610747565b10156105be5760405162461bcd60e51b815260040161046e90611731565b600854604051631e4f6a9160e21b81526001600160a01b039091169063793daa44906105f090859085906004016114e7565b600060405180830381600087803b15801561060a57600080fd5b505af115801561061e573d6000803e3d6000fd5b50505060ff821660009081526006602052604090205461064091503390610ed8565b5050565b601290565b6000610426610656610df2565b848460016000610664610df2565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054610698919061195a565b610df6565b6106a5610df2565b6001600160a01b03166106b661080c565b6001600160a01b0316146106dc5760405162461bcd60e51b815260040161046e906116fc565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b610706610df2565b6001600160a01b031661071761080c565b6001600160a01b03161461073d5760405162461bcd60e51b815260040161046e906116fc565b6106408282610fc9565b6001600160a01b0381166000908152602081905260409020545b919050565b61076e610df2565b6001600160a01b031661077f61080c565b6001600160a01b0316146107a55760405162461bcd60e51b815260040161046e906116fc565b6107af6000611091565b565b60066020526000908152604090205481565b6107cb610df2565b6001600160a01b03166107dc61080c565b6001600160a01b0316146108025760405162461bcd60e51b815260040161046e906116fc565b6106408282610ed8565b6005546001600160a01b031690565b60606004805461038f906119c8565b60008060016000610839610df2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156108855760405162461bcd60e51b815260040161046e906118c7565b610899610890610df2565b85858403610df6565b5060019392505050565b60006104266108b0610df2565b8484610eaa565b6108bf610df2565b6001600160a01b03166108d061080c565b6001600160a01b0316146108f65760405162461bcd60e51b815260040161046e906116fc565b60005b600960009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190611465565b811015610bb757600954604051634f6ccce760e01b81526000916001600160a01b031690634f6ccce7906109b7908590600401611943565b60206040518083038186803b1580156109cf57600080fd5b505afa1580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a079190611465565b600954604051638a727fd560e01b815291925060009162015180916001600160a01b031690638a727fd590610a40908690600401611943565b60206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611465565b610a9a90426119b1565b610aa49190611972565b6000838152600b602052604081205491925090610ac190836119b1565b90506000838152600a6020526040812054610adc9083611992565b6000858152600b6020526040902084905590508015610ba05760008481526007602052604081208054839290610b1390849061195a565b90915550506009546040516331a9108f60e11b8152610ba0916001600160a01b031690636352211e90610b4a908890600401611943565b60206040518083038186803b158015610b6257600080fd5b505afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906112d9565b82610fc9565b505050508080610baf90611a03565b9150506108f9565b50565b610bc2610df2565b6001600160a01b0316610bd361080c565b6001600160a01b031614610bf95760405162461bcd60e51b815260040161046e906116fc565b8051825114610c1a5760405162461bcd60e51b815260040161046e90611832565b60005b8251811015610c9f57818181518110610c4657634e487b7160e01b600052603260045260246000fd5b6020026020010151600a6000858481518110610c7257634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020819055508080610c9790611a03565b915050610c1d565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610cd7610df2565b6001600160a01b0316610ce861080c565b6001600160a01b031614610d0e5760405162461bcd60e51b815260040161046e906116fc565b600c805460ff1916911515919091179055565b610d29610df2565b6001600160a01b0316610d3a61080c565b6001600160a01b031614610d605760405162461bcd60e51b815260040161046e906116fc565b6000918252600a602052604090912055565b60076020526000908152604090205481565b610d8c610df2565b6001600160a01b0316610d9d61080c565b6001600160a01b031614610dc35760405162461bcd60e51b815260040161046e906116fc565b6001600160a01b038116610de95760405162461bcd60e51b815260040161046e906115e6565b610bb781611091565b3390565b6001600160a01b038316610e1c5760405162461bcd60e51b815260040161046e906117ee565b6001600160a01b038216610e425760405162461bcd60e51b815260040161046e9061162c565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610e9d908590611943565b60405180910390a3505050565b600c5460ff1615610ecd5760405162461bcd60e51b815260040161046e9061187e565b610c9f8383836110e3565b6001600160a01b038216610efe5760405162461bcd60e51b815260040161046e90611768565b610f0a82600083610c9f565b6001600160a01b03821660009081526020819052604090205481811015610f435760405162461bcd60e51b815260040161046e906115a4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610f729084906119b1565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fb5908690611943565b60405180910390a3610c9f83600084610c9f565b6001600160a01b038216610fef5760405162461bcd60e51b815260040161046e9061190c565b610ffb60008383610c9f565b806002600082825461100d919061195a565b90915550506001600160a01b0382166000908152602081905260408120805483929061103a90849061195a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061107d908590611943565b60405180910390a361064060008383610c9f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166111095760405162461bcd60e51b815260040161046e906117a9565b6001600160a01b03821661112f5760405162461bcd60e51b815260040161046e90611561565b61113a838383610c9f565b6001600160a01b038316600090815260208190526040902054818110156111735760405162461bcd60e51b815260040161046e9061166e565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111aa90849061195a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111f49190611943565b60405180910390a3611207848484610c9f565b50505050565b600082601f83011261121d578081fd5b8135602067ffffffffffffffff8083111561123a5761123a611a34565b8183026040518382820101818110848211171561125957611259611a34565b60405284815283810192508684018288018501891015611277578687fd5b8692505b8583101561129957803584529284019260019290920191840161127b565b50979650505050505050565b803560ff8116811461076157600080fd5b6000602082840312156112c7578081fd5b81356112d281611a4a565b9392505050565b6000602082840312156112ea578081fd5b81516112d281611a4a565b60008060408385031215611307578081fd5b823561131281611a4a565b9150602083013561132281611a4a565b809150509250929050565b600080600060608486031215611341578081fd5b833561134c81611a4a565b9250602084013561135c81611a4a565b929592945050506040919091013590565b6000806040838503121561137f578182fd5b823561138a81611a4a565b946020939093013593505050565b600080604083850312156113aa578182fd5b82356113b581611a4a565b91506113c3602084016112a5565b90509250929050565b600080604083850312156113de578182fd5b823567ffffffffffffffff808211156113f5578384fd5b6114018683870161120d565b93506020850135915080821115611416578283fd5b506114238582860161120d565b9150509250929050565b60006020828403121561143e578081fd5b813580151581146112d2578182fd5b60006020828403121561145e578081fd5b5035919050565b600060208284031215611476578081fd5b5051919050565b6000806040838503121561148f578182fd5b50508035926020909101359150565b6000602082840312156114af578081fd5b6112d2826112a5565b600080604083850312156114ca578182fd5b61138a836112a5565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561153a5785810183015185820160400152820161151e565b8181111561154b5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f53656e6465722068617320696e73756666696369656e742066756e6473000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252602c908201527f496473206c656e67746820646f6573206e6f74206d61746368206d756c74697060408201526b0d8d2cae4e640d8cadccee8d60a31b606082015260800190565b60208082526029908201527f557365727320617265206e6f7420616c6c6f77656420746f207472616e73666560408201526872207469636b65747360b81b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561196d5761196d611a1e565b500190565b60008261198d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156119ac576119ac611a1e565b500290565b6000828210156119c3576119c3611a1e565b500390565b6002810460018216806119dc57607f821691505b602082108114156119fd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611a1757611a17611a1e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bb757600080fdfea26469706673582212206e789a7e24fa5b45fb42648abf3fc2fb456409d4db00c5186cf650bcc04e181b64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c8063749f82e7116100de578063c489f1db11610097578063e31743d711610071578063e31743d714610334578063e6cbfc8a14610347578063ee204ff21461035a578063f2fde38b1461036d5761018e565b8063c489f1db14610306578063d6f748ff1461030e578063dd62ed3e146103215761018e565b8063749f82e71461029d57806385bc898c146102b05780638da5cb5b146102c357806395d89b41146102d8578063a457c2d7146102e0578063a9059cbb146102f35761018e565b80632b3f944e1161014b5780634306e4c9116101255780634306e4c91461025c57806363ef62ef1461026f57806370a0823114610282578063715018a6146102955761018e565b80632b3f944e14610221578063313ce5671461023457806339509351146102495761018e565b806306fdde0314610193578063095ea7b3146101b157806314c6e60f146101d157806318160ddd146101e657806323b872dd146101fb5780632a9c5a971461020e575b600080fd5b61019b610380565b6040516101a8919061150e565b60405180910390f35b6101c46101bf36600461136d565b610412565b6040516101a89190611503565b6101e46101df3660046114b8565b61042f565b005b6101ee61048d565b6040516101a89190611943565b6101c461020936600461132d565b610493565b6101e461021c3660046112b6565b610523565b6101e461022f366004611398565b610584565b61023c610644565b6040516101a8919061194c565b6101c461025736600461136d565b610649565b6101e461026a3660046112b6565b61069d565b6101e461027d36600461136d565b6106fe565b6101ee6102903660046112b6565b610747565b6101e4610766565b6101ee6102ab36600461149e565b6107b1565b6101e46102be36600461136d565b6107c3565b6102cb61080c565b6040516101a891906114d3565b61019b61081b565b6101c46102ee36600461136d565b61082a565b6101c461030136600461136d565b6108a3565b6101e46108b7565b6101e461031c3660046113cc565b610bba565b6101ee61032f3660046112f5565b610ca4565b6101e461034236600461142d565b610ccf565b6101e461035536600461147d565b610d21565b6101ee61036836600461144d565b610d72565b6101e461037b3660046112b6565b610d84565b60606003805461038f906119c8565b80601f01602080910402602001604051908101604052809291908181526020018280546103bb906119c8565b80156104085780601f106103dd57610100808354040283529160200191610408565b820191906000526020600020905b8154815290600101906020018083116103eb57829003601f168201915b5050505050905090565b600061042661041f610df2565b8484610df6565b50600192915050565b610437610df2565b6001600160a01b031661044861080c565b6001600160a01b0316146104775760405162461bcd60e51b815260040161046e906116fc565b60405180910390fd5b60ff909116600090815260066020526040902055565b60025490565b60006104a0848484610eaa565b6001600160a01b0384166000908152600160205260408120816104c1610df2565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156105045760405162461bcd60e51b815260040161046e906116b4565b61051885610510610df2565b858403610df6565b506001949350505050565b61052b610df2565b6001600160a01b031661053c61080c565b6001600160a01b0316146105625760405162461bcd60e51b815260040161046e906116fc565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60ff81166000908152600660205260409020546105a033610747565b10156105be5760405162461bcd60e51b815260040161046e90611731565b600854604051631e4f6a9160e21b81526001600160a01b039091169063793daa44906105f090859085906004016114e7565b600060405180830381600087803b15801561060a57600080fd5b505af115801561061e573d6000803e3d6000fd5b50505060ff821660009081526006602052604090205461064091503390610ed8565b5050565b601290565b6000610426610656610df2565b848460016000610664610df2565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054610698919061195a565b610df6565b6106a5610df2565b6001600160a01b03166106b661080c565b6001600160a01b0316146106dc5760405162461bcd60e51b815260040161046e906116fc565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b610706610df2565b6001600160a01b031661071761080c565b6001600160a01b03161461073d5760405162461bcd60e51b815260040161046e906116fc565b6106408282610fc9565b6001600160a01b0381166000908152602081905260409020545b919050565b61076e610df2565b6001600160a01b031661077f61080c565b6001600160a01b0316146107a55760405162461bcd60e51b815260040161046e906116fc565b6107af6000611091565b565b60066020526000908152604090205481565b6107cb610df2565b6001600160a01b03166107dc61080c565b6001600160a01b0316146108025760405162461bcd60e51b815260040161046e906116fc565b6106408282610ed8565b6005546001600160a01b031690565b60606004805461038f906119c8565b60008060016000610839610df2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156108855760405162461bcd60e51b815260040161046e906118c7565b610899610890610df2565b85858403610df6565b5060019392505050565b60006104266108b0610df2565b8484610eaa565b6108bf610df2565b6001600160a01b03166108d061080c565b6001600160a01b0316146108f65760405162461bcd60e51b815260040161046e906116fc565b60005b600960009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190611465565b811015610bb757600954604051634f6ccce760e01b81526000916001600160a01b031690634f6ccce7906109b7908590600401611943565b60206040518083038186803b1580156109cf57600080fd5b505afa1580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a079190611465565b600954604051638a727fd560e01b815291925060009162015180916001600160a01b031690638a727fd590610a40908690600401611943565b60206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611465565b610a9a90426119b1565b610aa49190611972565b6000838152600b602052604081205491925090610ac190836119b1565b90506000838152600a6020526040812054610adc9083611992565b6000858152600b6020526040902084905590508015610ba05760008481526007602052604081208054839290610b1390849061195a565b90915550506009546040516331a9108f60e11b8152610ba0916001600160a01b031690636352211e90610b4a908890600401611943565b60206040518083038186803b158015610b6257600080fd5b505afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906112d9565b82610fc9565b505050508080610baf90611a03565b9150506108f9565b50565b610bc2610df2565b6001600160a01b0316610bd361080c565b6001600160a01b031614610bf95760405162461bcd60e51b815260040161046e906116fc565b8051825114610c1a5760405162461bcd60e51b815260040161046e90611832565b60005b8251811015610c9f57818181518110610c4657634e487b7160e01b600052603260045260246000fd5b6020026020010151600a6000858481518110610c7257634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020819055508080610c9790611a03565b915050610c1d565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610cd7610df2565b6001600160a01b0316610ce861080c565b6001600160a01b031614610d0e5760405162461bcd60e51b815260040161046e906116fc565b600c805460ff1916911515919091179055565b610d29610df2565b6001600160a01b0316610d3a61080c565b6001600160a01b031614610d605760405162461bcd60e51b815260040161046e906116fc565b6000918252600a602052604090912055565b60076020526000908152604090205481565b610d8c610df2565b6001600160a01b0316610d9d61080c565b6001600160a01b031614610dc35760405162461bcd60e51b815260040161046e906116fc565b6001600160a01b038116610de95760405162461bcd60e51b815260040161046e906115e6565b610bb781611091565b3390565b6001600160a01b038316610e1c5760405162461bcd60e51b815260040161046e906117ee565b6001600160a01b038216610e425760405162461bcd60e51b815260040161046e9061162c565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610e9d908590611943565b60405180910390a3505050565b600c5460ff1615610ecd5760405162461bcd60e51b815260040161046e9061187e565b610c9f8383836110e3565b6001600160a01b038216610efe5760405162461bcd60e51b815260040161046e90611768565b610f0a82600083610c9f565b6001600160a01b03821660009081526020819052604090205481811015610f435760405162461bcd60e51b815260040161046e906115a4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610f729084906119b1565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fb5908690611943565b60405180910390a3610c9f83600084610c9f565b6001600160a01b038216610fef5760405162461bcd60e51b815260040161046e9061190c565b610ffb60008383610c9f565b806002600082825461100d919061195a565b90915550506001600160a01b0382166000908152602081905260408120805483929061103a90849061195a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061107d908590611943565b60405180910390a361064060008383610c9f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166111095760405162461bcd60e51b815260040161046e906117a9565b6001600160a01b03821661112f5760405162461bcd60e51b815260040161046e90611561565b61113a838383610c9f565b6001600160a01b038316600090815260208190526040902054818110156111735760405162461bcd60e51b815260040161046e9061166e565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111aa90849061195a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111f49190611943565b60405180910390a3611207848484610c9f565b50505050565b600082601f83011261121d578081fd5b8135602067ffffffffffffffff8083111561123a5761123a611a34565b8183026040518382820101818110848211171561125957611259611a34565b60405284815283810192508684018288018501891015611277578687fd5b8692505b8583101561129957803584529284019260019290920191840161127b565b50979650505050505050565b803560ff8116811461076157600080fd5b6000602082840312156112c7578081fd5b81356112d281611a4a565b9392505050565b6000602082840312156112ea578081fd5b81516112d281611a4a565b60008060408385031215611307578081fd5b823561131281611a4a565b9150602083013561132281611a4a565b809150509250929050565b600080600060608486031215611341578081fd5b833561134c81611a4a565b9250602084013561135c81611a4a565b929592945050506040919091013590565b6000806040838503121561137f578182fd5b823561138a81611a4a565b946020939093013593505050565b600080604083850312156113aa578182fd5b82356113b581611a4a565b91506113c3602084016112a5565b90509250929050565b600080604083850312156113de578182fd5b823567ffffffffffffffff808211156113f5578384fd5b6114018683870161120d565b93506020850135915080821115611416578283fd5b506114238582860161120d565b9150509250929050565b60006020828403121561143e578081fd5b813580151581146112d2578182fd5b60006020828403121561145e578081fd5b5035919050565b600060208284031215611476578081fd5b5051919050565b6000806040838503121561148f578182fd5b50508035926020909101359150565b6000602082840312156114af578081fd5b6112d2826112a5565b600080604083850312156114ca578182fd5b61138a836112a5565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561153a5785810183015185820160400152820161151e565b8181111561154b5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f53656e6465722068617320696e73756666696369656e742066756e6473000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252602c908201527f496473206c656e67746820646f6573206e6f74206d61746368206d756c74697060408201526b0d8d2cae4e640d8cadccee8d60a31b606082015260800190565b60208082526029908201527f557365727320617265206e6f7420616c6c6f77656420746f207472616e73666560408201526872207469636b65747360b81b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561196d5761196d611a1e565b500190565b60008261198d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156119ac576119ac611a1e565b500290565b6000828210156119c3576119c3611a1e565b500390565b6002810460018216806119dc57607f821691505b602082108114156119fd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611a1757611a17611a1e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bb757600080fdfea26469706673582212206e789a7e24fa5b45fb42648abf3fc2fb456409d4db00c5186cf650bcc04e181b64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 613,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 619,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 621,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 623,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 625,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 387,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5686,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "boxTierToPrice",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint8,t_uint256)"
      },
      {
        "astId": 5690,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "nookiTokenTicketsAccrued",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 5693,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_nuttyLoot",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(NuttyLootInterface)5647"
      },
      {
        "astId": 5696,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_nuttyNooki",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(NuttyNookiInterface)5678"
      },
      {
        "astId": 5700,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_nookiTokenToTicketMultiplier",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 5704,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_nookiTokenPrevDispenseDay",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 5706,
        "contract": "contracts/ticketer.sol:NuttyTickets",
        "label": "_transferBlocked",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(NuttyLootInterface)5647": {
        "encoding": "inplace",
        "label": "contract NuttyLootInterface",
        "numberOfBytes": "20"
      },
      "t_contract(NuttyNookiInterface)5678": {
        "encoding": "inplace",
        "label": "contract NuttyNookiInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}